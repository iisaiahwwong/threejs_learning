<div id="container">

</div>
<script type="text/javascript" src="/js/vendor/dat.gui.js"></script>
<script>
	$(function() {
		var scene = new THREE.Scene();
		var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
		var renderer = new THREE.WebGLRenderer();

		var controls = new THREE.OrbitControls(camera, renderer.domElement);
		controls.addEventListener( 'change', render); // remove when using animation loop

		renderer.setClearColor(0xdddddd);
		renderer.setSize(window.innerWidth, window.innerHeight);

		var axis = new THREE.AxisHelper(10);
		scene.add(axis);

		var grid = new THREE.GridHelper(50, 10, 'black', 0x000000);
		scene.add(grid);

		var cubeGeometry = new THREE.BoxGeometry(5, 5, 5);
		var cubeMaterial = new THREE.MeshLambertMaterial({color: 0xff3300});
		var cube = new THREE.Mesh(cubeGeometry, cubeMaterial);
		cube.castShadow = true;

		var planeGeometry = new THREE.PlaneGeometry(30, 30, 30);
		var planeMaterial = new THREE.MeshLambertMaterial({color: 0xffffff});
		var plane = new THREE.Mesh(planeGeometry, planeMaterial);

		plane.receiveShadow = true;
		plane.rotation.x = -90* Math.PI / 180;
		scene.add(plane);

		cube.position.x = 2.5;
		cube.position.y = 4.5;
		cube.position.z = 2.5;
		scene.add(cube);

		var spotlight = new THREE.SpotLight(0xffffff);
		spotlight.castShadow = true;
		spotlight.position.set(0, 30, 50);

		scene.add(spotlight);

		camera.position.x = 40;
		camera.position.y = 40;
		camera.position.z = 40;

		camera.lookAt(scene.position);

		var guiControls = new function() {
			this.rotationX = 0.01;
			this.rotationY = 0.01;
			this.rotationZ = 0.01;
		};

		var datGUI = new dat.GUI();
		datGUI.add(guiControls, 'rotationX', 0, 1);
		datGUI.add(guiControls, 'rotationY', 0, 1);
		datGUI.add(guiControls, 'rotationZ', 0, 1);
		window.addEventListener('resize', onWindowResize, false);
		$("#container").append(renderer.domElement);

		function animate() {
			requestAnimationFrame(animate);
			update();
			render();
		}

		function update() {
			cube.rotation.x += guiControls.rotationX;
			cube.rotation.y += guiControls.rotationY
			cube.rotation.z += guiControls.rotationZ
		}

		function render() {
			renderer.render(scene, camera);
		}

		function onWindowResize() {
			camera.aspect = window.innerWidth / window.innerHeight;
			camera.updateProjectionMatrix();
			renderer.setSize( window.innerWidth, window.innerHeight );
		}

		render();
		animate();
	});
</script>